# Description of the DATACH file format and example of the input DATACH file

# GEMIPM2K v. 0.780
# Prototype 28.07.2006
# Comment lines are marked with '#' and will be ignored when reading the file

# dch-dat text input file for DATACH data generated by the GEMS-PSI GEM2MT module 
# This file should be be read before the IPM-DAT file and the DATABR files

# The DATACH file contains parts of chemical system definitions (CSD) that can be 
# requested both by GEM and by the FMT parts of the coupled code. Contents of 
# this file will be placed in two memory data structures: 
# (1) DATACH - visible from both GEMIPM and the FMT part, and 
# (2) MULTI - the internal work structure of GEMIPM, not visible from the FMT part. 

# The DATACH text input file consists of nine sections, of which sections (1), (2), 
# (3) and (4) contain dimensions needed for memory allocation and have the fixed order
# of data fields, each beginning with a tag - a data name in <>. Tags mostly correspond 
# to names of variables in the DATACH.H header. The section (5) contains names and some 
# data for independent components (IC), section (6) contains names and data for the 
# dependent components (DC), section (7) contains names and data for phases, the section 
# (8) contains data for Dependent Components, and the section (9) contains the 
# interpolation grid arrays with thermodynamic data for DCs. 
# At present, data tags and fields in sections (5) to (9) have a fixed order, but 
# this may be changed to the arbitrary order in the following versions. 

# The actual numbers in this description are related to a particular example of 
# the chemical system and are given for illustration purposes. The numbers and name 
# lists may change if a different CSD is constructed. 

## Section (1): Basis CSD Dimensions (for memory allocation)
# Number of Independent Components (stoichiometry basis of the system) 
<nIC>  7
# Number of Dependent Components (species made of independent components)
<nDC>  25
# Number of phases (into which Dependent Components are grouped)
<nPH>  4
# Number of phases-solutions (multicomponent phases), nPS <= nPH
<nPS>  3
# Number of DCs in phases-solutions (multicomponent phases), nDCs <= nDC
<nDCs> 24

## Section (2): Databridge (node) configuration (for memory allocation).
# Dimensions needed for reading and accessing the DATABR (node description) 
# files like <TaskName>-dbr-<node0>.dat. The corresponding index lists are
# given in Section (4) of this file.
# Number of Independent Components kept in the DATABR structure, nICb <= nIC
<nICb> 7
# Number of Dependent Components kept in the DATABR structure, nDCb <= nDC
<nDCb> 25
# Number of Phases to be kept in DATABR structure, nPHb <= nPH
<nPHb> 4
# Number of Phases-solutions (multicomponent phases) kept in DATABR structure
<nPSb> 3
# Note that in order to use previous GEM solution as initial approximation, 
# it must be set nICb = nIC, nDCb = nDC, nPHb = nPH and nPSb = nPS.

## Section (3): Dimensions for grid arrays for interpolation of thermodynamic 
# data; the arrays are given in Section (8) of this file. 
# Number of temperature points in the interpolation grid array, 1 < nTP < 20
<nTp>  1
# Number of pressure points in the interpolation grid array, 1 < nTP < 10
<nPp>  1
# Flag for selection of grid arrays provided: 0 - V0 and G0 only; 
# 1 - V0, G0 and H0; 2 - V0, G0, H0, and S0; 3 - V0, G0, H0, S0 and Cp0;
# 4 - V0, G0, H0, S0, Cp0 and A0 (Helmholtz) (reserved)
<iGrd> 0
# Flag for keeping specific surface areas in DATABR structures/files
<fAalp> 1

## --------------- End of dimensions sections for memory allocation
## The above three sections must always precede all other sections

## Section (4): Databridge configuration (access index lists)
# DATACH index list of Independent Component kept in the DATABR structure
# xIC Size: see <nICb>
<xIC>
0 1 2 3 4 5 6 
# DATACH index list of Dependent Components kept in the DATABR structure
# xDC Size: see <nDCb>
<xDC>
0 1 2 3 4 5 6 7 8 9 
10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 
# DATACH index list of Phases kept in the DATABR structure
# xPH Size: see <nPHb>
<xPH>
0 1 2 3 

# Note: the index lists are trivial when all components and phases from 
# DATACH are also kept in DATABR structure. If not, for instance, if 
# nDCb < nDC, then indexes of DCs from DATACH lists which are not taken 
# into DATABR arrays are not included in the xDC lists. The index lists
# defined above permit to find data for a component or phase from its 
# index in a DATABR array, or vice versa. 

## Section (5): Names, types and data for Independent Components
# Name list of independent components (up to 4 characters per name, 
# name must begin with a capital letter and contain no digits or other 
# special characters except _ (underscore). 'Zz' is special name for 
# the electric charge IC which must be the last one in the list.
# Names in the ICNL list must be alphabetically sorted. 
# Size of the list: see <nIC>. Data in all other arrays involving ICs
# must follow the order given in this list.
<ICNL>
'Al' 'H' 'N' 'Na' 'Nit' 'O' 'Zz' 
# Codes of independent components: 'e' - chemical element; 'h' - hydrogen; 
# 'o' - oxygen, 'z' - electric charge (used in GEM IPM).
# Size of the list: see <nIC>
<ccIC>
'e' 'h' 'e' 'e' 'a' 'o' 'z' 
# Atomic (molar) masses of Independent Components, in g/mol
# Size of the list: see <nIC>
<ICmm>
2.698154067993164062e+01 1.007949948310852051e+00 1.400669956207275391e+01 2.298979949951171875e+01 1.400669956207275391e+01 1.599940013885498047e+01 0.000000000000000000e+00 

## Section (6): Names and type codes for Dependent Components
# Name list of dndependent components (up to 16 characters per name, 
# name can contain Latin letters, digits, @, -, +, =, _ symbols, 
# spaces are not allowed. 
# Names in the DCNL list must be arranged according to the order of
# phases to which the DCs belong, i.e. aqueous species first, then 
# water-solvent, then gases (if any), then condensed solutions end-members,
# then components of sorption phases, and then components of pure phases. 
# Size of the list: see <nDC>. Data in all other data arrays for DC 
# must have the same order as the DC names in this list.
<DCNL>
'Al+3' 'AlO+' 'AlO2-' 'AlO2H@' 'AlOH+2' 'Na+' 'NaOH@' 'H2@' 'NO3-' 'NH3@' 
'NH4+' 'N2@' 'O2@' 'OH-' 'H+' 'H2O@' 'H2' 'N2' 'O2' '-OH-0.5' 
'-OH-0.5Na+' '-OH2+0.5' '-OH2+0.5NO3-' 'Gbs' 'Gbs' 

# Type codes of Dependent components: 'S' - aqueous solute; 'T' - aqueous 
# H+ ion; 'W' - water-solvent; 'G' - component of the gas mixture; 
# 'I' - component of ideal non-electrolyte solution; 'M' - major component 
# of (solid) colution; 'J' - minor component of solid solution; 'Q' - 
# sorbent in the sorption phase; 'X' - neutral OH surface species; 
# 'Y' - inner-sphere surface complex; 'Z' - outer-sphere surface complex;
# 'O' - component of the pure condensed phase.
# Size of the list: see <nDC>. The type codes are heavily used in GEM IPM
# algorithm for selecting proper equations for chemical potentials, scaling
# factors etc. Wrong codes in this list may lead to crashes, wrong results, 
# or unexpected behavior of the program.
<ccDC>
'S' 'S' 'S' 'S' 'S' 'S' 'S' 'S' 'S' 'S' 
'S' 'S' 'S' 'S' 'T' 'W' 'G' 'G' 'G' '0' 
'1' '0' '1' 'Q' 'O' 

## Section (7): Names, type codes of Phases, and allocation of DCs to phases.
# List of Phase names (up to 16 characters per name, the name can contain 
# Latin letters, digits, @, -, +, =, _ symbols, spaces are not allowed. 
# Names in the PHNL list must be arranged in the following order: 
# aqueous species first (if present), then gas phase (if present), then 
# then condensed solution phases (if present), then sorption phases (if
# present), and then pure phases. 
# Size of the list: see <nPH>. Data in all other data arrays for phases 
# must go in the same order as the Phase names in this list.
<PHNL>
'aq_gen' 'gas_gen' 'Gibbsite_an' 'Gibbsite' 

# Phase aggregate state code list: 'a' - aqueous electrolyte; 'g' - gas mixture;
# 'f' - non-ideal fluid; 's' - solid; 'l' - liquid non-electrolyte; 'm' -
# silicate melt; 'x' - sorption phase. 
# Size of the list: see <nPH>. The type codes are heavily used in GEM IPM
# for the selection of mixing models, scaling factors etc. 
<ccPH>
'a' 'g' 'x' 's' 

# Vector L1 telling how many Dependent Components is included in each phase.
# Size of the vector: see <nPH>. The vector (together with the <ccPH> codes) 
# tells that the first 19 DCs incl. water-solvent belong to the aqueous 
# electrolyte phase; the next 4 belong to the gas mixture; and the next 5 DCs 
# belong each to the pure solid phase. Sum of all elements in this vector 
# must exactly equal <nDC>. Wrong data in this vector will cause the program
# crash or production of meaningless results. 
<nDCinPH>
16 3 5 1 

## Section (8): Basic data for Dependent Components
# Stoichiometry matrix A for DCs containing expanded chemical formulae of 
# chemical species from the DC list. The matrix has <nDC> rows and <nIC>
# columns. Each column corresponds to IC name (see <ICNL>) and each row - 
# to DC name (see <DCNL>). Numbers in a row tell how many moles of IC are 
# contained in 1 mol of a DC to which this row belongs. In aqueous systems, 
# the last column of this matrix contains the formula charge of DCs. 
# The total number of numbers in the matrix is <nDC>*<nIC>. 
<A>
1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 3.0000000000e+00 
1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 1.0000000000e+00 1.0000000000e+00 
1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 2.0000000000e+00 -1.0000000000e+00 
1.0000000000e+00 1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 2.0000000000e+00 0.0000000000e+00 
1.0000000000e+00 1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 1.0000000000e+00 2.0000000000e+00 
0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 1.0000000000e+00 
0.0000000000e+00 1.0000000000e+00 0.0000000000e+00 1.0000000000e+00 0.0000000000e+00 1.0000000000e+00 0.0000000000e+00 
0.0000000000e+00 2.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 
0.0000000000e+00 0.0000000000e+00 1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 3.0000000000e+00 -1.0000000000e+00 
0.0000000000e+00 3.0000000000e+00 1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 
0.0000000000e+00 4.0000000000e+00 1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 1.0000000000e+00 
0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 2.0000000000e+00 0.0000000000e+00 0.0000000000e+00 
0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 2.0000000000e+00 0.0000000000e+00 
0.0000000000e+00 1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 1.0000000000e+00 -1.0000000000e+00 
0.0000000000e+00 1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 1.0000000000e+00 
0.0000000000e+00 2.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 1.0000000000e+00 0.0000000000e+00 
0.0000000000e+00 2.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 
0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 2.0000000000e+00 0.0000000000e+00 0.0000000000e+00 
0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 2.0000000000e+00 0.0000000000e+00 
0.0000000000e+00 1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 7.5000000000e-01 -5.0000000000e-01 
0.0000000000e+00 1.0000000000e+00 0.0000000000e+00 1.0000000000e+00 0.0000000000e+00 7.5000000000e-01 5.0000000000e-01 
0.0000000000e+00 2.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 7.5000000000e-01 5.0000000000e-01 
0.0000000000e+00 2.0000000000e+00 1.0000000000e+00 0.0000000000e+00 0.0000000000e+00 3.7500000000e+00 -5.0000000000e-01 
1.0000000000e+00 3.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 3.0000000000e+00 0.0000000000e+00 
1.0000000000e+00 3.0000000000e+00 0.0000000000e+00 0.0000000000e+00 0.0000000000e+00 3.0000000000e+00 0.0000000000e+00 

# Molar masses of Dependent Components (in g/mol). The vector has <nDC> 
# elements. 
<DCmm>
2.698154067993164062e+01 4.298094081878662110e+01 5.898034095764160156e+01 5.998829090595245362e+01 4.398889076709747314e+01 2.298979949951171875e+01 3.999714958667755127e+01 2.015899896621704102e+00 6.200489997863769531e+01 1.703054940700531006e+01 
1.803849935531616211e+01 2.801339912414550781e+01 3.199880027770996094e+01 1.700735008716583252e+01 1.007949948310852051e+00 1.801530003547668457e+01 2.015899896621704102e+00 2.801339912414550781e+01 3.199880027770996094e+01 1.300750005245208740e+01 
3.599729955196380615e+01 1.401545000076293945e+01 7.602034997940063476e+01 7.800359094142913818e+01 7.800359094142913818e+01 

# Diffusion coefficients for DCs in multicomponent phases (provisional). 
# This vector has <nDCs> elements. 
# In future versions, this data object will be moved in section (9). 
<DD>
0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 
0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 
0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00 

## (9) Thermodynamic data section
# Tolerance for the interpolation over temperature (C, K)
# Thermodynamic data will be re-interpolated only if temperature
# is by more than Ttol different than the previous one used in 
# GEM IPM calculation
<Ttol> 1.000000000000000000e+00
# Temperatures for the grid arrays data, C; <nTp> temperatures
<Tval>
2.5000000000e+01 

# Tolerance for the interpolation over pressure (bar)
# Thermodynamic data will be re-interpolated only if pressure
# is by more than Ptol different than the previous one used in 
# GEM IPM calculation
<Ptol> 1.0000000000e+00
# Pressures for the grid (bar), <nPp> pressures
<Pval>
1.0000000000e+00 

# Note: if current T or P is set beyond the interval covered 
# in <Tval> or <Pval> then it will be automatically set on the
# nearest border of the interval in the DATABR node and in the
# GEM IPM calculation.  
#
# Below, the grid data arrays follow. The easiest way to generate
# them is to use the GEM2MT module of GEMS-PSI code. 
#
# Grid array for density of pure water-solvent (g/cm3)
# It has <nPp> rows and <nTp> columns. Each row corresponds to 
# certain value of pressure from the <Pval> vector. Data in the
# row refer to this pressure and temperatures in the sequence 
# defined in the <Tval> vector. 
<roW>
9.970613718032836914e-01 

# Grid array for dielectric constant of pure water-solvent.
# It has <nPp> rows and <nTp> columns. Each row corresponds to 
# certain value of pressure from the <Pval> vector. Data in the
# row refer to this pressure and temperatures in the sequence 
# defined in the <Tval> vector. 
<epsW>
7.824514770507812500e+01 

# Obligatory grid array for (standard) molar volumes of Dependent Components 
# (in J/bar).
# This and following arrays have a 3-D organization which is a sequence
# of 2D sub-tables, each corresponding to one Dependent Component in the 
# sequence defined in the <DCNL> list.  
# Such 2D sub-table has <nPp> rows and <nTp> columns, in total, <nPp>*<nTp>
# elements. Each row in the sub-table corresponds to a certain value 
# of pressure from the <Pval> vector. Data in the row refer to this pressure 
# and temperatures in the sequence defined in the <Tval> vector.  (J/bar)
<V0>
-4.524287223815917969e+00 
3.073364123702049255e-02 
9.467352628707885742e-01 
1.300944566726684570e+00 
-2.727511525154113770e-01 
-1.207963451743125916e-01 
3.509255945682525635e-01 
2.526435852050781250e+00 
2.866480827331542969e+00 
2.444578409194946289e+00 
1.808446645736694336e+00 
3.340691328048706055e+00 
3.050088882446289062e+00 
-4.707843065261840820e-01 
-5.870894958850718926e-18 
1.806839704513549805e+00 
2.478971191406250000e+03 
2.478971191406250000e+03 
2.478971191406250000e+03 
1.355129718780517578e+00 
1.234333395957946777e+00 
1.355129718780517578e+00 
4.221610546112060547e+00 
3.195600032806396484e+00 
3.195600032806396484e+00 

# Obligatory grid array for DC molar Gibbs energy function g(T,P) (J/mol)
# This array has a 3-D organization which is a sequence of 2D sub-tables, 
# each corresponding to one Dependent Component in the sequence defined 
# in the <DCNL> list.  
# Such 2D sub-table has <nPp> rows and <nTp> columns, in total, <nPp>*<nTp>
# elements. Each row in the sub-table corresponds to a certain value 
# of pressure from the <Pval> vector. Data in the row refer to this pressure 
# and to temperatures in a sequence defined in the <Tval> vector. 
<G0>
-4.837080014482868719e+05 
-6.604200005034544738e+05 
-8.274790009163175710e+05 
-8.642769999842178076e+05 
-6.925950009073228576e+05 
-2.618810001739205327e+05 
-4.181239999842178076e+05 
1.772900010994954937e+04 
-1.109050005774723250e+05 
-2.666999997369628181e+04 
-7.939500007901649224e+04 
1.819400018244259263e+04 
1.644600020743112691e+04 
-1.572700009072690736e+05 
-8.736396360945122323e-12 
-2.371813848366551392e+05 
0.000000000000000000e+00 
0.000000000000000000e+00 
0.000000000000000000e+00 
-1.610170000000000000e+05 
-4.234690000000000000e+05 
-2.180970000000000000e+05 
-3.295730000000000000e+05 
-1.150986000000000000e+06 
-1.150986000000000000e+06 

# Here, optional grid arrays for H0, S0, Cp0 and A0 should be added 
# depending on the value of <iGrd> flag. All these arrays have 
# the same structure as the two V0 and G0 above.   
# <H0>
# <S0>
# <Cp0>
# <A0>

# End of file