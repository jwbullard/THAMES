#############################################################################
# Makefile for building: gemnode
# Generated by qmake (1.07a) (Qt 3.3.8) on: Fri Jul 13 12:31:56 2007
# Project:  gem_node-sep.pro
# Template: app
# Command: $(QMAKE) -o Makefile gem_node-sep.pro
#############################################################################

!if !$d(BCB)
BCB = $(MAKEDIR)\..
!endif

####### Compiler, tools and options

CC	=	bcc32
CXX	=	bcc32
LEX     = flex
YACC    = byacc
CFLAGS	=	-tWR -x -xd -xp -VM -RT -w -w-hid -tWM -v -tWC -RT-  -DUNICODE -DIPMGEMPLUGIN -D__win32_borland
CXXFLAGS=	-tWR -x -xd -xp -VM -RT -w -w-hid -tWM -v -tWC -RT-  -DUNICODE -DIPMGEMPLUGIN -D__win32_borland
LEXFLAGS=
YACCFLAGS=-d
INCPATH	=	 -I"." -I"." -I"." -I"." -I"." -I"." -I"." -I"." 
LINK	=	ilink32
LFLAGS	=	-L$(BCB)\lib -c -x -Gn -v -ap -Tpe c0x32.obj
LIBS	=	import32.lib cw32mti.lib
MOC	=	
UIC	=	
QMAKE =       qmake
IDC		=	
IDL		=	midl
ZIP	=	zip -r -9
DEF_FILE =	
RES_FILE =	
COPY_FILE  =       copy
COPY_DIR  =       copy
DEL_FILE   =       del
DEL_DIR    =       rmdir
MOVE  =       move
CHK_DIR_EXISTS =	if not exist
MKDIR		=	mkdir
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)

####### Files

HEADERS =	array.h \
		verror.h \
		gstring.h \
		gdatastream.h \
		v_user.h \
		s_fgl.h \
		databr.h \
		datach.h \
		node.h \
		ms_multi.h \
		io_arrays.h \
		m_const.h \
		m_param.h \
		num_methods.h \
		tnt_i_refvec.h \
		tnt_array1d.h \
		tnt_array2d.h \
		tnt.h \
		jama_cholesky.h \
		jama_lu.h
SOURCES =	gstring.cpp \
		gdatastream.cpp \
		s_fgl.cpp \
		s_fgl2.cpp \
		node.cpp \
		node_format.cpp \
		ms_multi_file.cpp \
		ms_multi_format.cpp \
		ipm_chemical.cpp \
		ipm_chemical2.cpp \
		ipm_chemical3.cpp \
		ipm_main.cpp \
		ipm_simplex.cpp \
		io_arrays.cpp \
		main.cpp \
		ms_param.cpp \
		num_methods.cpp
OBJECTS =	obj\gstring.obj \
		obj\gdatastream.obj \
		obj\s_fgl.obj \
		obj\s_fgl2.obj \
		obj\node.obj \
		obj\node_format.obj \
		obj\ms_multi_file.obj \
		obj\ms_multi_format.obj \
		obj\ipm_chemical.obj \
		obj\ipm_chemical2.obj \
		obj\ipm_chemical3.obj \
		obj\ipm_main.obj \
		obj\ipm_simplex.obj \
		obj\io_arrays.obj \
		obj\main.obj \
		obj\ms_param.obj \
		obj\num_methods.obj
FORMS =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	
OBJMOC	=	
DIST	=	
TARGET	=	gemnode.exe

####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.obj:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o$@ $<

.cc.obj:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o$@ $<

.cxx.obj:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o$@ $<

.C.obj:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o$@ $<

.c.obj:
	$(CC) -c $(CFLAGS) $(INCPATH) -o$@ $<

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) @&&|
	$(LFLAGS) $(OBJECTS) $(OBJMOC),$(TARGET),,$(LIBS),$(DEF_FILE),$(RES_FILE)
|


dist:
	$(ZIP) gemnode.zip $(SOURCES) $(HEADERS) $(DIST) $(FORMS) 


clean: 
	-$(DEL_FILE) obj\gstring.obj
	-$(DEL_FILE) obj\gdatastream.obj
	-$(DEL_FILE) obj\s_fgl.obj
	-$(DEL_FILE) obj\s_fgl2.obj
	-$(DEL_FILE) obj\node.obj
	-$(DEL_FILE) obj\node_format.obj
	-$(DEL_FILE) obj\ms_multi_file.obj
	-$(DEL_FILE) obj\ms_multi_format.obj
	-$(DEL_FILE) obj\ipm_chemical.obj
	-$(DEL_FILE) obj\ipm_chemical2.obj
	-$(DEL_FILE) obj\ipm_chemical3.obj
	-$(DEL_FILE) obj\ipm_main.obj
	-$(DEL_FILE) obj\ipm_simplex.obj
	-$(DEL_FILE) obj\io_arrays.obj
	-$(DEL_FILE) obj\main.obj
	-$(DEL_FILE) obj\ms_param.obj
	-$(DEL_FILE) obj\num_methods.obj
	-$(DEL_FILE) gemnode220.tds



distclean: clean
	-$(DEL_FILE) $(TARGET)

####### Compile

obj\gstring.obj: gstring.cpp gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\gstring.obj gstring.cpp

obj\gdatastream.obj: gdatastream.cpp gdatastream.h \
		verror.h \
		gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\gdatastream.obj gdatastream.cpp

obj\s_fgl.obj: s_fgl.cpp s_fgl.h \
		m_const.h \
		verror.h \
		v_user.h \
		gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\s_fgl.obj s_fgl.cpp

obj\s_fgl2.obj: s_fgl2.cpp s_fgl.h \
		m_const.h \
		verror.h \
		v_user.h \
		gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\s_fgl2.obj s_fgl2.cpp

obj\node.obj: node.cpp node.h \
		gdatastream.h \
		num_methods.h \
		m_param.h \
		datach.h \
		databr.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\node.obj node.cpp

obj\node_format.obj: node_format.cpp io_arrays.h \
		node.h \
		gdatastream.h \
		gstring.h \
		array.h \
		m_param.h \
		datach.h \
		databr.h \
		ms_multi.h \
		verror.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\node_format.obj node_format.cpp

obj\ms_multi_file.obj: ms_multi_file.cpp io_arrays.h \
		m_param.h \
		gdatastream.h \
		gstring.h \
		array.h \
		ms_multi.h \
		verror.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\ms_multi_file.obj ms_multi_file.cpp

obj\ms_multi_format.obj: ms_multi_format.cpp io_arrays.h \
		m_param.h \
		node.h \
		gstring.h \
		array.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		m_const.h \
		v_user.h \
		datach.h \
		databr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\ms_multi_format.obj ms_multi_format.cpp

obj\ipm_chemical.obj: ipm_chemical.cpp m_param.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\ipm_chemical.obj ipm_chemical.cpp

obj\ipm_chemical2.obj: ipm_chemical2.cpp m_param.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\ipm_chemical2.obj ipm_chemical2.cpp

obj\ipm_chemical3.obj: ipm_chemical3.cpp m_param.h \
		s_fgl.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\ipm_chemical3.obj ipm_chemical3.cpp

obj\ipm_main.obj: ipm_main.cpp m_param.h \
		jama_lu.h \
		jama_cholesky.h \
		node.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h \
		tnt.h \
		tnt_array1d.h \
		tnt_array2d.h \
		tnt_i_refvec.h \
		datach.h \
		databr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\ipm_main.obj ipm_main.cpp

obj\ipm_simplex.obj: ipm_simplex.cpp m_param.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\ipm_simplex.obj ipm_simplex.cpp

obj\io_arrays.obj: io_arrays.cpp io_arrays.h \
		verror.h \
		gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\io_arrays.obj io_arrays.cpp

obj\main.obj: main.cpp node.h \
		m_param.h \
		datach.h \
		databr.h \
		gdatastream.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\main.obj main.cpp

obj\ms_param.obj: ms_param.cpp m_param.h \
		num_methods.h \
		gdatastream.h \
		node.h \
		ms_multi.h \
		verror.h \
		gstring.h \
		array.h \
		m_const.h \
		v_user.h \
		datach.h \
		databr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\ms_param.obj ms_param.cpp

obj\num_methods.obj: num_methods.cpp v_user.h \
		num_methods.h \
		verror.h \
		gstring.h \
		array.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -oobj\num_methods.obj num_methods.cpp

####### Install

install:  

uninstall:  

