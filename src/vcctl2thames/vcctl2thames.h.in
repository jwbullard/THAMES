/***
 *	This is an adaptation of the public header file required for
 *	VCCTL programs.
 *
 *	Programmer:  Jeffrey W. Bullard
 *				 NIST
 *				 100 Bureau Drive Stop 8615
 *				 Gaithersburg, MD  20899-8615
 *
 *				 Phone:	301.975.5725
 *				 Fax:	301.990.6892
 *				 bullard@nist.gov
 *
 *				 2021 January 7
 ***/
#include <cstdio>
#include <fstream>
#include <getopt.h>
#include <iomanip>
#include <iostream>
#include <map>
#include <string>
#include <vector>
#include <algorithm>

bool Verbose;
bool Debug;

/******************************************************
 * Define strings used in VCCTL header
 ******************************************************/
const std::string VCCTL_Version_string = "Version:";
const std::string VCCTL_Xsize_string = "X_Size:";
const std::string VCCTL_Ysize_string = "Y_Size:";
const std::string VCCTL_Zsize_string = "Z_Size:";
const std::string VCCTL_ImgSize_string = "Image_Size:";
const std::string VCCTL_ImgRes_string = "Image_Resolution:";

/******************************************************
 * Define strings used in THAMES header
 ******************************************************/
const std::string THAMES_Version_string = "#THAMES_Version:";
const std::string THAMES_Xsize_string = "#X_Size:";
const std::string THAMES_Ysize_string = "#Y_Size:";
const std::string THAMES_Zsize_string = "#Z_Size:";
const std::string THAMES_ImgRes_string = "#Image_Resolution:";
const std::string THAMES_Version = "@THAMES_VERSION@";

/******************************************************
 * Define phase identifier for all VCCTL species
 ******************************************************/

/***
 *	These are phases present in unhydrated
 *	blended cements
 ***/

const int ELECTROLYTE_ID = 0;
const int C3S = 1;
const int C2S = 2;
const int C3A = 3;
const int C4AF = 4;
const int K2SO4 = 5;
const int NA2SO4 = 6;
const int GYPSUM = 7;
const int HEMIHYD = 8;
const int ANHYDRITE = 9;
const int SFUME = 10;
const int INERT = 11;
const int SLAG = 12;
const int INERTAGG = 13;

/***
 *	The next three phases are distributed
 *	primarily within flyash.  Other phases
 *	that are distributed within flyash are
 *	also found as species during hydration,
 *	such as CaCl2
 ***/

/* Aluminosilicate glass */
const int ASG = 14;
const int CAS2 = 15;
const int AMSIL = 16;
/* C3A phase within flyash */
const int FAC3A = 17;

const int FLYASH = 18;

/* Total number of "cement" phases */
const int NCEMPHASES = 19;

/***
 *	The following are hydration products
 ***/

const int CH = 19;
const int CSH = 20;
const int C3AH6 = 21;
const int ETTR = 22;

/* Iron-rich stable ettringite */
const int ETTRC4AF = 23;

const int AFM = 24;
const int FH3 = 25;
const int POZZCSH = 26;
const int SLAGCSH = 27;
const int CACL2 = 28;

/* Friedel's salt */
const int FRIEDEL = 29;

/* Stratlingite (C2ASH8) */
const int STRAT = 30;

/* Gypsum formed from hemihydrate and anhydrite */
const int GYPSUMS = 31;
const int ABSGYP = 32;

const int CACO3 = 33;
const int AFMC = 34;

/***
 *	Phases for chloride ingress model and
 *	sulfate attack model
 ***/
const int BRUCITE = 35;
const int MS = 36;

/* Free lime */
const int FREELIME = 37;

/* Orthorhombic C3A */
const int OC3A = 38;

/* Number of SOLID phases (excludes saturated porosity */

const int NSPHASES = 38;

/***
 *	Diffusing species
 ***/
const int DIFFCSH = 39;
const int DIFFCH = 40;
const int DIFFGYP = 41;
const int DIFFC3A = 42;
const int DIFFC4A = 43;
const int DIFFFH3 = 44;
const int DIFFETTR = 45;
const int DIFFCACO3 = 46;
const int DIFFAS = 47;
const int DIFFANH = 48;
const int DIFFHEM = 49;
const int DIFFCAS2 = 50;
const int DIFFCACL2 = 51;
const int DIFFSO4 = 52;

const int NDIFFPHASES = 53;

/***
 *	Special types of porosity
 ***/

const int DRIEDP = 53;
const int EMPTYDP = 54;

/***
 *	Empty porosity due to self dessication
 ***/
const int EMPTYP = 55;

/***
 *	Crack porosity, defined as the porosity
 *	created when the microstructure is cracked.
 *	Can be saturated or empty, depending on the
 *	application (24 May 2004)
 ***/
const int CRACKP = 56;

/***
 *	Offset for highlighting potentially
 *	soluble surface pixels in disrealnew
 ***/

const int OFFSET = 57;

/***
 *	Total number of types of pixels, which
 *	INCLUDES diffusing species
 ***/
const int NDIFFUS = 57;

const int SANDINCONCRETE = 60;
const int COARSEAGG01INCONCRETE = 61;
const int COARSEAGG02INCONCRETE = 62;
const int FINEAGG01INCONCRET = 63;
const int FINEAGG02INCONCRETE = 64;

const int NPHASES = 65;

const std::vector<std::string> Vcctlnames{"Saturated porosity",
                                          "C3S (or generic phase)",
                                          "C2S",
                                          "C3A (cubic)",
                                          "C4AF",
                                          "K2SO4",
                                          "Na2SO4",
                                          "Gypsum",
                                          "Bassanite",
                                          "Anhydrite",
                                          "Silica fume",
                                          "Inert material",
                                          "Slag",
                                          "Aggregate",
                                          "Aluminosilicate glass",
                                          "Calcium aluminate glass",
                                          "Amorphous silica",
                                          "Fly ash C3A",
                                          "Fly ash",
                                          "Portlandite",
                                          "C-S-H",
                                          "C3AH6",
                                          "Ettringite",
                                          "C4AF Ettr",
                                          "Monosulfate",
                                          "Fe(OH)3",
                                          "Pozzolanic C-S-H",
                                          "Slag C-S-H",
                                          "CaCl2",
                                          "Friedel salt",
                                          "Stratlingite",
                                          "Secondary gypsum 1",
                                          "Secondary gypsum 2",
                                          "CaCO3",
                                          "Carboaluminate",
                                          "Brucite",
                                          "Magnesium silicate",
                                          "CaO",
                                          "C3A (ortho)",
                                          "DIFFCSH",
                                          "DIFFCH",
                                          "DIFFGYP",
                                          "DIFFC3A",
                                          "DIFFC4AF",
                                          "DIFFFH3",
                                          "DIFFEttr",
                                          "DIFFCaCO3",
                                          "DIFFASglass",
                                          "DIFFANH",
                                          "DIFFHEM",
                                          "DIFFCAS2",
                                          "DIFFCaCl2",
                                          "DIFFSO4",
                                          "Dried porosity",
                                          "Empty dried porosity",
                                          "Empty porosity",
                                          "Crack porosity"};

/* Function declarations */

void printBanner(void);

void checkargs(int argc, char **argv);

void printHelp(void);

int readVCCTLImage(std::string &input_filename, int &xsize, int &ysize, int &zsize,
                   float &res, std::vector<int> &mic, std::map<int, int> &idmap);

void openFile(std::string &input_filename, std::ifstream &fin);

int readVCCTLHeader(std::ifstream &fin, int &xsize, int &ysize, int &zsize,
                    float &res);

int getCorrespondences(std::vector<int> vcctlid, std::map<int, int> &corr);

bool isNaturalNumber(std::string &str);

int writeTHAMESImage(std::string input_filename, const int xsize, const int ysize,
                     const int zsize, const float res, const std::vector<int> mic,
                     std::map<int, int> corr);

int writeTHAMESHeader(std::ofstream &fout, const int xsize, const int ysize,
                      const int zsize, const float res);
